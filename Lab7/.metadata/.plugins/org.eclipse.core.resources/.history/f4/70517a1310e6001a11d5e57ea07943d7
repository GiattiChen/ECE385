// Main.c - makes LEDG0 on DE2-115 board blink if NIOS II is set up correctly
// for ECE 385 - University of Illinois - Electrical and Computer Engineering
// Author: Zuofu Cheng
//
//int main()
//{
//	int i = 0;
//	volatile unsigned int *LED_PIO = (unsigned int*)0x40; //make a pointer to access the PIO block
//
//	*LED_PIO = 0; //clear all LEDs
//	while ( (1+1) != 3) //infinite loop
//	{
//		for (i = 0; i < 100000; i++); //software delay
//		*LED_PIO |= 0x1; //set LSB
//		for (i = 0; i < 100000; i++); //software delay
//		*LED_PIO &= ~0x1; //clear LSB
//	}
//	return 1; //never gets here
//}
//

int main()
{
	volatile unsigned int *KEY_PIO = (unsigned int*)0x60; //make a pointer to access the PIO block
	volatile unsigned int *SW_PIO  = (unsigned int*)0x50; //make a pointer to access the PIO block
	volatile unsigned int *LED_PIO = (unsigned int*)0x70; //make a pointer to access the PIO block

	*LED_PIO = 0; //clear all LEDs
	int Reset_pressed = 0; // initialize the condition of reset button
	int Accumulate_pressed = 0;
	volatile unsigned int count = 0;

	while (1) //infinite loop
	{
		if ((*KEY_PIO & 0x1)!=0 && Reset_pressed==0){
			count = 0;
			*LED_PIO = 0;
			Reset_pressed = 1;
		}


		if ((*KEY_PIO & 0x2)!=0 && Accumulate_pressed==0){
			count += (*SW_PIO) ;
			if (count >= 256){
				count -= 256;
			}
			Accumulate_pressed = 1;
		}


		*LED_PIO = count;

		if ((*KEY_PIO & 0x1)==0){
			Reset_pressed = 0;
		}
		if ((*KEY_PIO & 0x2)==0){
			Accumulate_pressed = 0;
		}
	}
	return 1;
}
